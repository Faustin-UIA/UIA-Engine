name: UIA Bench (Mistral)

on:
  workflow_dispatch:
    inputs:
      model:
        description: "Mistral model (mistral-large-latest, mistral-small-latest)"
        required: false
        default: "mistral-large-latest"
      scope:
        description: "A-scope (all, A1, A1-A3, A1,A2,A3)"
        required: false
        default: "all"
      concurrency:
        description: "Parallel requests"
        required: false
        default: "6"
      max_tokens:
        description: "Max completion tokens"
        required: false
        default: "180"
      temperature:
        description: "Sampling temperature"
        required: false
        default: "0.2"
  schedule:
    - cron: "0 7 * * *"

permissions:
  contents: write

concurrency:
  group: uia-bench-mistral-${{ github.ref }}
  cancel-in-progress: false

jobs:
  baseline-mistral:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      NODE_OPTIONS: "--max-old-space-size=2048"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: "npm" }
      - run: npm ci || npm i

      - name: Run Mistral baseline
        env:
          MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
          MODEL_ID: ${{ github.event.inputs.model || 'mistral-large-latest' }}
          SCOPE: ${{ github.event.inputs.scope || 'all' }}
          MAX_TOKENS: ${{ github.event.inputs.max_tokens || '180' }}
          TEMPERATURE: ${{ github.event.inputs.temperature || '0.2' }}
          CONCURRENCY: ${{ github.event.inputs.concurrency || '6' }}
        run: |
          set -euo pipefail
          mkdir -p results
          TS=$(date -u +"%Y-%m-%dT%H%M%SZ")
          echo "TS=$TS" >> $GITHUB_ENV
          echo "::notice title=Mistral Baseline::Starting ${TS} (model=$MODEL_ID, scope=$SCOPE)"
          node baseline_mistral.js \
            --model="$MODEL_ID" \
            --A="$SCOPE" \
            --concurrency="$CONCURRENCY" \
            --max_tokens="$MAX_TOKENS" \
            --temperature="$TEMPERATURE" \
            --log="results/baseline_mistral_${TS}.jsonl" \
          2>&1 | tee "results/baseline_mistral_console_${TS}.log"
          echo "::notice title=Mistral Baseline::Completed"

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: baseline-mistral-results
          path: |
            results/baseline_mistral_*.jsonl
            results/baseline_mistral_console_*.log
          retention-days: 14

  uia-mistral:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      NODE_OPTIONS: "--max-old-space-size=2048"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: "npm" }
      - run: npm ci || npm i

      - name: Run Mistral UIA
        env:
          MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
          MODEL_ID: ${{ github.event.inputs.model || 'mistral-large-latest' }}
          SCOPE: ${{ github.event.inputs.scope || 'all' }}
          MAX_TOKENS: ${{ github.event.inputs.max_tokens || '180' }}
          TEMPERATURE: ${{ github.event.inputs.temperature || '0.2' }}
          CONCURRENCY: ${{ github.event.inputs.concurrency || '6' }}
        run: |
          set -euo pipefail
          mkdir -p results
          TS=${TS:-$(date -u +"%Y-%m-%dT%H%M%SZ")}
          echo "::notice title=Mistral UIA::Starting ${TS} (model=$MODEL_ID, scope=$SCOPE)"
          node index_mistral.js \
            --model="$MODEL_ID" \
            --A="$SCOPE" \
            --prompts=6 \
            --concurrency="$CONCURRENCY" \
            --max_tokens="$MAX_TOKENS" \
            --temperature="$TEMPERATURE" \
            --log="results/uia_mistral_${TS}.jsonl" \
          2>&1 | tee "results/uia_mistral_console_${TS}.log"
          echo "::notice title=Mistral UIA::Completed"

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: uia-mistral-results
          path: |
            results/uia_mistral_*.jsonl
            results/uia_mistral_console_*.log
          retention-days: 14

  compare:
    if: always()
    needs: [baseline-mistral, uia-mistral]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: "npm" }
      - run: npm ci || npm i

      - uses: actions/download-artifact@v4
        with: { name: baseline-mistral-results, path: results }
      - uses: actions/download-artifact@v4
        with: { name: uia-mistral-results, path: results }

      - name: Summarize Mistral results
        run: |
          set -euo pipefail
          echo "::group::Generating summary"
          if [ -f summarize_all.js ]; then
            node summarize_all.js results/baseline_mistral*.jsonl results/uia_mistral*.jsonl
          else
            node -e '
              const fs=require("fs");
              const path="results";
              const target=(fs.readdirSync(path).find(f=>/^baseline_mistral_.*\.jsonl$/.test(f))||"");
              const rows=target?fs.readFileSync(`${path}/${target}`,"utf8").trim().split("\n").map(JSON.parse).filter(r=>r.event==="BASELINE:row"):[];
              const lat=rows.map(r=>+r.latencyMs||0).sort((a,b)=>a-b);
              const q=p=>lat.length?lat[Math.floor((p/100)*(lat.length-1))]:null;
              const avg=lat.length?Math.round(lat.reduce((a,b)=>a+b,0)/lat.length):null;
              fs.writeFileSync("results/summary_all.md", `# Mistral Brief\n\nBaseline rows: ${rows.length}\nLatency avg ${avg}ms (p50 ${q(50)} / p90 ${q(90)} / p99 ${q(99)})\n`);
              fs.writeFileSync("results/summary_all.csv", "metric,value\navg_latency_ms,"+(avg||"")+"\n");
            '
          fi
          echo "::endgroup::"
          echo "::group::Mistral Brief"
          cat results/summary_all.md || true
          echo "::endgroup::"

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mistral-summary
          path: |
            results/summary_all.csv
            results/summary_all.md
          retention-days: 30

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: all-mistral-results
          path: results/
          retention-days: 14
